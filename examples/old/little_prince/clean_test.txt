(c / chapter
  :mod 4)

(c2 / cause-01
      :ARG1 (l / learn-01
            :ARG0 (i / i)
            :ARG1 (f / fact
                  :ord (o / ordinal-entity :value 2)
                  :mod (i2 / important
                        :degree (g / great))
                  :domain (l2 / large
                        :degree (m / more
                              :mod (a / any
                                    :degree (s2 / scarce)))
                        :compared-to (h / house)
                        :domain (p / planet
                              :ARG3-of (c / come-01
                                    :ARG1 (p2 / prince
                                          :mod (l3 / little))))))))

(c / contrast-01
      :ARG2 (s / surprise-01 :polarity -
            :ARG0 (t / that)
            :ARG1 (i / i)
            :degree (m / much)
            :ARG1-of (r / real-04)))

(k / know-01
      :ARG0 (i / i)
      :ARG1 (e / exist-01
            :ARG1 (a2 / and
                  :op1 (p / planet
                        :mod (g / great)
                        :example (p2 / planet :wiki "Earth" :name (n / name :op1 "Earth"))
                        :example (p3 / planet :wiki "Jupiter" :name (n2 / name :op1 "Jupiter"))
                        :example (p4 / planet :wiki "Mars" :name (n3 / name :op1 "Mars"))
                        :example (p5 / planet :wiki "Venus" :name (n4 / name :op1 "Venus"))
                        :ARG1-of (n5 / name-01
                              :ARG0 (w3 / we)))
                  :op2 (p7 / planet
                        :ARG2-of (i2 / include-91
                              :ARG1 (p6 / planet
                                    :mod (s2 / small
                                          :degree (s3 / so)
                                          :ARG0-of (c / cause-01
                                                :ARG1 (d / difficult
                                                      :domain (s4 / see-01
                                                            :ARG1 p6
                                                            :instrument (t / telescope)))))))
                        :mod (o / other)
                        :quant (m / multiple :op1 100)
                        :mod (a / also))))
      :mod (w / well
            :degree (v / very)))

(g / give-01
      :ARG0 (a / astronomer)
      :ARG1 (n2 / number)
      :ARG2 (t / thing :quant 1
            :ARG1-of (i / include-91
                  :ARG2 (t2 / this)))
      :mod (o2 / only)
      :time (d / discover-01
            :ARG0 a
            :ARG1 t)
      :ARG1-of (i2 / instead-of-91
            :ARG2 (n3 / name-01
                  :ARG0 a
                  :ARG1 t)))

(p / possible-01
      :ARG1 (c / call-01
            :ARG0 (h / he)
            :ARG1 (i / it)
            :ARG2 (n2 / name :op1 "Asteroid" :op2 325)
            :ARG0-of (e / exemplify-01)))

(c / cause-01
      :ARG0 (r / reason
            :ARG1-of (s / serious-02))
      :ARG1 (b / believe-01
            :ARG0 (i / i)
            :ARG1 (c2 / come-01
                  :ARG1 (p2 / prince
                        :mod (l / little))
                  :ARG3 (a / asteroid :wiki - :name (n4 / name :op1 "B-612")
                        :domain (p / planet)))))

(s / see-01
      :ARG1 (a / asteroid
            :mod (t / this))
      :instrument (t2 / telescope)
      :ARG1-of (h / have-frequency-91
            :ARG2 1
            :mod (o / only)))

(s / see-01
      :ARG0 (a / astronomer
            :mod (c / country :wiki "Turkey"
                  :name (n / name :op1 "Turkey")))
      :time (d / date-entity :year 1909))

(p / present-01
      :ARG0 a
      :ARG1 (i / it)
      :ARG2 (o / organization :wiki "International_Astronautical_Congress" :name (n / name :op1 "International" :op2 "Astronomical" :op3 "Congress"))
      :manner (d2 / demonstrate-01
            :ARG0 a
            :mod (g / great))
      :time (d3 / discover-01
            :ARG0 (a / astronomer)))

(c4 / contrast-01
      :ARG2 (c / costume-01
            :ARG1 (h / he)
            :manner (c2 / country :wiki "Turkey"
                  :name (n / name :op1 "Turkey"))
            :ARG0-of (c3 / cause-01
                  :ARG1 (b2 / believe-01
                        :ARG0 (s / somebody :polarity -)
                        :ARG1 (t / thing
                              :ARG1-of (s2 / say-01
                                    :ARG0 h))))))

(r / resemble-01
      :ARG1 (g / grown-up)
      :ARG2 (t / that))

(c5 / contrast-01
      :ARG2 (m / make-01
            :ARG0 (p3 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (c / country :wiki "Turkey" :name (n / name :op1 "Turkey"))
                        :ARG2 (d / dictator)))
            :ARG1 (l / law
                  :topic (c2 / change-01
                        :ARG0 (s / subject
                              :poss p3)
                        :ARG3 (c3 / costume
                              :mod (c4 / continent :wiki "Europe" :name (n2 / name :op1 "Europe")))
                        :manner (t / threaten-01
                              :ARG0 d
                              :ARG1 (p / penalize-01
                                    :ARG1 s
                                    :topic (d2 / die-01
                                          :ARG1 s))
                              :ARG2 s)))
            :ARG2-of (f / fortunate-01
                  :ARG1 (r / reputation
                        :poss (p2 / planet :wiki - :name (n3 / name :op1 "Asteroid" :op2 "B-612"))))))

(c / cause-01
      :ARG1 (d4 / demonstrate-01
            :ARG0 (a / astronomer
                  :ARG1-of (d2 / dress-01
                        :ARG2 (a4 / and
                              :op1 (s / style)
                              :op2 (e / elegance)
                              :ARG0-of (i / impress-01))))
            :time (d3 / date-entity :year 1920)
            :mod (a3 / again
                  :mod (a2 / all-over))))

(a / and
  :op2 (a2 / accept-01
         :ARG0 (e / everybody)
         :ARG1 (t3 / thing
                 :ARG1-of (r / report-01
                            :ARG0 (h2 / he)))
         :time (t / time
                 :mod (t2 / this))))

(a / account-01
  :ARG1 a3
  :ARG2 (a2 / and
          :op1 (g / grown-up)
          :op2 (w / way
                 :poss g))
  :condition (a3 / and
               :op1 (t / tell-01
                      :ARG0 (i / i)
                      :ARG1 (d / detail
                              :mod (t2 / this)
                              :topic (a4 / asteroid))
                      :ARG2 (y / you))
               :op2 (n3 / note-01
                      :ARG0 i
                      :ARG1 (n4 / number
                              :poss a4)
                      :ARG2 y)))

(q2 / question-01 :polarity -
      :ARG0 (t2 / they)
      :ARG1 (m / matter
            :mod (e / essential))
      :ARG2 (y / you)
      :time (t3 / tell-01
            :ARG0 y
            :ARG1 (m2 / make-01
                  :ARG0 y
                  :ARG1 (h / have-rel-role-91
                        :ARG0 (p / person)
                        :ARG1 y
                        :ARG2 (f / friend)
                        :ARG1-of (n / new-01)))
            :ARG2 (t / they))
      :time (e2 / ever)
      :mod (a2 / any))

(s / say-01
  :ARG0 (t / they)
  :ARG1 (s2 / sound-01
          :ARG1 (v / voice
                  :poss (h / he))
          :ARG2 (a2 / amr-unknown))
  :ARG2 (y / you)
  :time (e / ever)
  :polarity -)

(l / love-01
      :ARG0 (h / he)
      :ARG1 (a2 / amr-unknown
            :domain (g2 / game))
      :degree (g / good
            :degree (m / most)))

(c / collect-01
      :ARG0 (h / he)
      :ARG1 (b / butterfly)
      :mode interrogative)

(d / demand-01
      :ARG0 (t / they)
      :ARG1 (a2 / age-01
            :ARG1 (h2 / he)
            :ARG2 (a3 / amr-unknown))
      :ARG1-of (i2 / instead-of-91))

(h / have-rel-role-91
      :ARG0 (p / person
            :quant (a / amr-unknown))
      :ARG1 (h2 / he)
      :ARG2 (b / brother))

(w / weigh-01
      :ARG1 (h / he)
      :ARG3 (a / amr-unknown))

(m / make-05
      :ARG0 (p / person
            :ARG0-of (h2 / have-rel-role-91
                  :ARG1 (h / he)
                  :ARG2 (f / father)))
      :ARG1 (m2 / monetary-quantity
            :quant (a / amr-unknown)))

(t / think-01
      :ARG0 (t2 / they)
      :ARG1 (l / learn-01
            :ARG0 t2
            :ARG1 (a / anything
                  :topic (h / he))
            :source (f / figure
                  :mod (t3 / this
                        :mod (o / only)))))

(p / possible-01 :polarity -
      :ARG1 (g / get-01
            :ARG0 g2
            :ARG1 (i / idea
                  :mod (a / any)
                  :mod (a2 / at
                        :mod (a3 / all))
                  :topic h2))
      :condition (s / say-01
            :ARG0 (y / you)
            :ARG1 (s2 / see-01
                  :ARG0 y
                  :ARG1 (h2 / house
                        :ARG1-of (m / make-01
                              :ARG2 (b / brick
                                    :mod (r / rosy)))
                        :accompanier (a4 / and
                              :op1 (g3 / geranium
                                    :location (w / window))
                              :op2 (d / dove
                                    :location (r2 / roof)))
                        :ARG1-of (b2 / beautiful-02)))
            :ARG2 (g2 / grown-up)))

(o / obligate-01
  :ARG1 y
  :ARG2 (s / say-01
          :ARG0 (y / you)
          :ARG1 (s2 / see-01
                  :ARG0 y
                  :ARG1 (h / house
                          :ARG1-of (c / cost-01
                                     :ARG2 (m / monetary-quantity
                                             :unit (d / dollar)
                                             :quant 20000))))
          :ARG2 (t / they)))

(e / exclaim-01
  :ARG0 (t / they)
  :ARG1 (p2 / pretty
          :domain (h2 / house
                    :mod (t4 / that)))
  :time (t3 / then))

(p / possible-01
      :ARG1 (s2 / say-01
            :ARG0 (y / you)
            :ARG1 (p2 / prove-01
                  :ARG0 (a / and
                        :op1 (c / charming
                              :domain (h / he))
                        :op2 (l / laugh-01
                              :ARG0 h)
                        :op3 (l2 / look-01
                              :ARG0 h
                              :ARG1 (s3 / sheep)))
                  :ARG1 (e / exist-01
                        :ARG1 (p3 / prince
                              :mod (l3 / little))))
            :ARG2 (t / they)
            :manner (j / just-so)))

(p / prove-01
  :ARG0 (w / want-01
          :ARG0 (a / anybody)
          :ARG1 (s / sheep))
  :ARG1 (e / exist-01
          :ARG1 a))

(a / and
      :op2 (d / do-02
            :ARG0 (t / tell-01
                  :ARG1 (t3 / that)
                  :ARG2 (t2 / they))
            :ARG1 (g / good-04
                  :ARG2 t2
                  :quant (a2 / amr-unknown))))

(a / and
      :op1 (s / shrug-01
            :ARG0 (t / they)
            :ARG1 (s2 / shoulder
                  :poss t))
      :op2 (t2 / treat-01
            :ARG0 t
            :ARG1 (y / you)
            :ARG2 (c / child)))

(c3 / contrast-01
      :ARG2 (a / and
            :op1 (c / convince-01
                  :ARG1 (t / they))
            :op2 (l / leave-14
                  :ARG0 t
                  :ARG1 (p2 / peace
                        :topic (q2 / question-01 :polarity -
                              :ARG0 t)
                        :domain y))
            :condition (s / say-01
                  :ARG0 (y / you)
                  :ARG1 (c2 / come-01
                        :ARG1 (h / he)
                        :ARG3 (p / planet :wiki - :name (n / name :op1 "Asteroid" :op2 "B-612")))
                  :ARG2 t)))

(r / resemble-01
      :ARG1 (t / they)
      :ARG2 (t2 / that))

(o / obligate-01
      :ARG1 (o2 / one)
      :ARG2 (h / hold-01 :polarity -
            :ARG0 o2
            :ARG1 (i / it)
            :ARG2 (a / against
                  :op1 (t / they))))

(r / recommend-01
      :ARG1 (s / show-01
            :ARG0 (c / child)
            :ARG1 (f / forbearance
                  :mod (g / great))
            :ARG2 (g2 / grown-up)
            :time (a / always)))

(c2 / contrast-01
  :ARG2 (c / certain
          :domain (i2 / indifferent-01
                    :ARG1 (w2 / we
                            :ARG0-of (u / understand-01
                                       :ARG1 (l / life)))
                    :ARG2 (f2 / figure))))

(l / like-02
  :ARG0 (i / i)
  :ARG1 (b / begin-01
          :ARG0 i
          :ARG1 (s / story
                  :mod (t / this))
          :manner (f / fashion
                    :mod (t2 / tale
                           :mod (f2 / fairy)))))

(l / like-02
      :ARG0 (i / i)
      :ARG1 (s / say-01
            :ARG0 i
            :ARG1 (p / prince
                  :mod (l2 / little)
                  :ARG0-of (l3 / live-01
                        :location (p2 / planet
                              :mod (b / big
                                    :degree (m / more
                                          :quant (s2 / scarce))
                                    :compared-to p)))
                  :ARG0-of (n / need-01
                        :ARG1 (s3 / sheep))
                  :time (o / once-upon-a-time))))

(g / give-01
  :ARG0 (t / that)
  :ARG1 (t3 / truth
          :quant (a / air
                   :mod (g2 / great
                          :degree (m / more
                                    :degree (m2 / much)))))
  :ARG2 (s / story
          :poss (i / i))
  :beneficiary (p / person
                 :ARG0-of (u / understand-01
                            :ARG1 (l / life))))

(c / cause-01
      :ARG0 (w / want-01
            :ARG0 (i / i)
            :ARG1 (r / read-01
                  :ARG0 (a / anyone)
                  :ARG1 (b / book
                        :poss i)
                  :manner (c2 / careless))
            :polarity -))

(s / suffer-01
      :ARG0 (i / i)
      :ARG1 (g / grief
            :quant (m / much
                  :degree (t / too)))
      :time (s2 / set-down-09
            :ARG0 i
            :ARG1 (m2 / memory
                  :mod (t2 / this))))

(g / go-02
      :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (i / i)
                  :ARG2 (f / friend)))
      :direction (a / away
            :op1 i)
      :accompanier (s / sheep
            :poss p)
      :time (b / before
            :op1 (n / now)
            :quant (t / temporal-quantity :quant 6
                  :unit (y / year)))
      :time (a3 / already))

(e / ensure-01
  :ARG1 (f / forget-01
          :ARG0 i
          :ARG1 (h3 / he)
          :polarity -)
  :condition (t / try-01
               :ARG0 (i / i)
               :ARG1 (d / describe-01
                       :ARG0 i
                       :ARG1 (h / he)
                       :location (h2 / here))))

(s / sad-02
      :ARG0 (f3 / forget-01
            :ARG1 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG2 (f / friend)))))

(h / have-03 :polarity -
      :ARG0 (e / everyone)
      :ARG1 (p / person
            :ARG0-of (h2 / have-rel-role-91
                  :ARG1 e
                  :ARG2 (f / friend))))

(a / and
      :op2 (p / possible-01
            :ARG1 (r / resemble-01
                  :ARG1 (i / i)
                  :ARG2 (g / grown-up
                        :ARG1-of (i2 / interest-01 :polarity -
                              :ARG2 (a2 / anything
                                    :ARG2-of (e / except-01
                                          :ARG1 (f / figure))))))
            :condition (f2 / forget-01
                  :ARG0 i
                  :ARG1 (h / he))))

(b / buy-01
  :ARG0 (i / i)
  :ARG1 (a / and
          :op1 (p / paint
                 :location (b2 / box))
          :op2 (p2 / pencil
                 :quant (s / some)))
  :purpose (t2 / that))

(h / hard-02
      :ARG1 (t / take-up-31
            :ARG0 (i / i
                  :age (t4 / temporal-quantity
                        :duration-of (m / make-01 :polarity -
                              :ARG1 (p / picture
                                    :mod (a5 / any)
                                    :ARG2-of (e2 / except-01
                                          :ARG1 (a6 / and
                                                :op1 (p2 / picture
                                                      :topic (b / boa
                                                            :mod (c2 / constrictor)
                                                            :direction (f / from
                                                                  :op1 (o / outside))))
                                                :op2 (p3 / picture
                                                      :topic (b2 / boa
                                                            :mod (c3 / constrictor)
                                                            :direction (f2 / from
                                                                  :op1 (i2 / inside)))))))
                              :time (e / ever)
                              :time (s / since
                                    :op1 (a3 / age-01
                                          :ARG1 i
                                          :ARG2 (t6 / temporal-quantity :quant 6
                                                :unit (y2 / year)))))))
            :ARG1 (d / draw-01)
            :mod (a / again))
      :ARG1-of (c / cause-01))

(t / try-01
      :ARG0 (i / i)
      :ARG1 (m / make-02
            :ARG0 i
            :ARG1 (t2 / true-02
                  :ARG1 (p / portrait
                        :topic i)
                  :ARG2 (l / life)
                  :degree (m2 / most)
                  :compared-to (p2 / possible-01)))
      :mod (c / certain))

(c / contrast-01
      :ARG2 (s / sure-02 :polarity -
            :ARG0 (i / i)
            :degree (a / at
                  :op1 (a2 / all))
            :ARG1-of (s2 / succeed-01
                  :ARG0 i)))

(a / and
      :op1 (g / go-06
            :ARG1 (p2 / picture :quant 1
                  :ARG1-of (d / draw-01))
            :ARG2 (a2 / along)
            :mod (a3 / all-right))
      :op2 (r2 / resemble-01 :polarity -
            :ARG1 (p / picture
                  :ARG1-of (d2 / draw-01)
                  :mod (a4 / another))
            :ARG2 (s / subject
                  :poss p)))

(e / err-01
      :ARG0 (i / i)
      :topic (h / high-02
            :ARG1 (p / prince
                  :mod (l / little)))
      :mod (t / too)
      :example (a / and
            :op1 (t2 / tall
                  :domain p
                  :degree (t3 / too)
                  :location (p2 / place
                        :mod (o / one)))
            :op2 (s / short-07
                  :ARG1 p
                  :degree (t4 / too)
                  :location (p3 / place
                        :mod (a2 / another))))
      :mod (s2 / some))

(a / and
  :op2 (f / feel-01
         :ARG0 (i / i)
         :ARG1 (d / doubt-01
                 :ARG0 i
                 :ARG1 (c / color
                         :poss (c2 / costume
                                 :poss (h / he)))
                 :quant (s / some))))

(c / cause-01
      :ARG1 (f / fumble-01
            :ARG0 (i / i)
            :ARG1 (a / along)
            :manner (g / good-03
                  :degree (m / most)
                  :example (g2 / good-03
                        :time (n / now))
                  :example (b / bad-02
                        :time (n2 / now))
                  :example (f2 / fair-04
                        :ARG1-of (g3 / general-02)
                        :ARG1-of (h / hope-01
                              :ARG0 i)
                        :prep-to (m2 / middling))
                  :compared-to (p / possible-01))))

(m2 / mistake-02
      :ARG0 (i / i)
      :ARG1 (d / detail
            :mod (i2 / important
                  :degree (m3 / more))
            :mod (c / certain))
      :mod (a / also))

(c / contrast-01
  :ARG2 (f2 / fault-01
          :ARG1 (i / i)
          :ARG2 (s2 / something
                  :mod (t2 / that))
          :polarity -))

(e / explain-01 :polarity -
      :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 i
                  :ARG2 (f / friend)))
      :ARG1 (a / anything)
      :ARG2 (i / i)
      :time (e2 / ever))

(t / think-01
      :ARG0 (h / he)
      :ARG1 (r / resemble-01
            :ARG1 (i / i)
            :ARG2 h)
      :mod (p / perhaps))

(c / contrast-01
      :ARG2 (k / know-01 :polarity -
            :ARG0 (i / i)
            :ARG1 (t2 / thing
                  :manner-of (s / see-01
                        :ARG1 (s2 / sheep)
                        :path (t / through
                              :op1 (w / wall
                                    :consist-of (b2 / box))))))
      :mod (a / alas))

(r / resemble-01
      :ARG1 (i / i)
      :ARG2 (g / grown-up)
      :mod (p / perhaps)
      :quant (l / little))

(o / obligate-01
  :ARG1 (i / i)
  :ARG2 (g / grow-02
          :ARG1 i
          :ARG2 (o2 / old)))

(c / chapter :mod 5)

(l / learn-01
      :ARG0 (i / i)
      :ARG1 (a / and
            :op1 (s / something
                  :topic (p2 / planet
                        :poss (p3 / prince
                              :mod (l2 / little))))
            :op2 (d2 / depart-01
                  :ARG0 p3
                  :ARG1 p2)
            :op3 (j / journey-01
                  :ARG0 p3))
      :time (p / pass-03
            :ARG1 (d / day
                  :mod (e / each)))
      :source (t / talk-01
            :ARG0 (w / we)))

(c / come-01
      :ARG1 (i / information)
      :ARG1-of (s / slow-05
            :degree (v / very))
      :time (f / fall-01
            :ARG1 i
            :ARG3 (t / thing
                  :ARG1-of (t2 / think-01
                        :ARG0 (h / he)))
            :ARG1-of (c2 / chance-01)))

(h / hear-01
      :ARG0 (i / i)
      :ARG1 (c / catastrophe
            :poss (b / baobab))
      :manner (t / this)
      :time (d / day
            :ord (o / ordinal-entity :value 3)))

(o / obligate-01
      :ARG2 (t / thank-01
            :ARG0 (i / i)
            :ARG1 (s / sheep)
            :ARG2 (i2 / it))
      :time (t2 / time
            :mod (t3 / this))
      :mod (a / again :frequency 1))

(a / ask-01
      :ARG0 (p / prince
            :mod (l2 / little))
      :ARG1 (t / true-01
            :ARG1 (e / eat-01
                  :ARG0 (s / sheep)
                  :ARG1 (b / bush
                        :mod (l / little)))
            :ARG1-of (r / request-confirmation-91
                  :ARG0 p
                  :ARG2 i2))
      :ARG2 (i2 / i)
      :manner (a2 / abrupt)
      :conj-as-if (s2 / seize-01
            :ARG0 (d / doubt-01
                  :ARG0 p
                  :mod (g / grave))
            :ARG1 p))

(t / true-01
      :ARG1 (t2 / that))

(a / ah :mode expressive)

(g / glad-02
      :ARG1 (i / i))

(u / understand-01 :polarity -
      :ARG0 (i / i)
      :ARG1 (i2 / important
            :mod (s2 / so)
            :domain (r / recommend-01
                  :ARG1 (e / eat-01
                        :ARG0 (s / sheep)
                        :ARG1 (b / bush
                              :mod (l / little))))
            :ARG1-of (c / cause-01
                  :ARG0 (a / amr-unknown))))

(c / contrast-01
      :ARG1 (a / add-01
            :ARG0 (p / prince
                  :mod (l / little))
            :ARG1 (f / follow-05 :mode interrogative
                  :ARG1 (e / eat-01
                        :ARG0 (t / they)
                        :ARG1 (b / baobab)
                        :mod (a2 / also))
                  :ARG1-of (h / have-condition-91))))

(p2 / point-out-02
      :ARG0 (i / i)
      :ARG1 (a / and
            :op1 (t2 / tree
                  :mod (b5 / big
                        :compared-to (c / castle)
                        :degree (e4 / equal))
                  :domain (b2 / baobab)
                  :ARG1-of (i2 / instead-of-91
                        :ARG2 (b3 / bush
                              :mod (l3 / little)
                              :domain b2)))
            :op2 (e / eat-up-02 :polarity -
                  :ARG0 h
                  :ARG1 (b / baobab :quant 1
                        :ARG1-of (s / single-02))
                  :concession (e3 / even-if
                        :op1 (t / take-01
                              :ARG0 p
                              :ARG1 (h / herd
                                    :consist-of (e2 / elephant)
                                    :mod (w / whole))
                              :ARG3 (a2 / away)))))
      :beneficiary (p / prince
            :mod (l2 / little)))

(m / make-02
      :ARG0 (i / idea
            :topic (h / herd
                  :consist-of (e / elephant)))
      :ARG1 (l / laugh-01
            :ARG0 (p / prince
                  :mod (l2 / little))))

(s / say-01
      :ARG0 (h / he)
      :ARG1 (o / obligate-01
            :ARG2 (s2 / stack-01
                  :ARG0 (w / we)
                  :ARG1 (t / they))))

(c2 / contrast-01
      :ARG2 (c / comment-01
            :ARG0 (h / he)
            :ARG1 (s / start-out-05
                  :ARG0 (b2 / baobab)
                  :ARG2 (l / little)
                  :time (b4 / before
                        :op1 (g / grow-02
                              :ARG1 b2
                              :ARG2 (b5 / big
                                    :degree (s2 / so)))))
            :manner (w / wise)))

(c / correct-02
      :ARG1 (t / that)
      :mod (s / strict))

(s / say-01
  :ARG0 (i / i))

(c / contrast-01
      :ARG2 (c2 / cause-01
            :ARG0 (a / amr-unknown)
            :ARG1 (w / want-01
                  :ARG0 (y / you)
                  :ARG1 (e / eat-01
                        :ARG0 (s / sheep)
                        :ARG1 (b / baobab
                              :mod (l / little))))))

(a / answer-01
      :ARG0 (h / he)
      :ARG1 (i2 / i)
      :ARG2 (c / come-on-25)
      :time (i / immediate)
      :conj-as-if (s / speak-01
            :ARG0 h
            :ARG1 (s2 / something
                  :ARG0-of (e / evidence-01
                        :ARG1 s2))))

(a / and
      :op1 (o / oblige-02
            :ARG2 (e / effort-01
                  :ARG0 (i / i)
                  :ARG1 (s / solve-01
                        :ARG0 i
                        :ARG1 (p / problem
                              :mod (t / this))
                        :ARG2-of (a2 / assist-01 :polarity -
                              :ARG1 i))
                  :manner (m2 / mental)
                  :mod (g / great))))

(b2 / be-located-at-91
      :ARG1 (a3 / and
            :op1 (p / plant
                  :ARG1-of (g / good-02))
            :op2 (p2 / plant
                  :ARG1-of (b / bad-07))
            :mod (i / indeed))
      :ARG2 (a / and
            :op1 (p3 / planet
                  :location-of (l / live-01
                        :ARG0 (p4 / prince
                              :mod (l2 / little))))
            :op2 (p5 / planet
                  :mod (a2 / all)))
      :ARG1-of (l3 / learn-01
            :ARG0 (i2 / i)))

(a / and
      :op1 (s / seed
            :ARG1-of (g / good-02)
            :source (p / plant
                  :ARG1-of (g2 / good-02)))
      :op2 (s2 / seed
            :ARG1-of (b / bad-07)
            :source (p2 / plant
                  :ARG1-of (b2 / bad-07)))
      :ARG1-of (c2 / cause-01))

(c / contrast-01
      :ARG2 (p / possible-01 :polarity -
            :ARG1 (s2 / see-01
                  :ARG1 (s / seed))))

(s / sleep-01
      :ARG0 (t / they)
      :location (h / heart
            :ARG2-of (d / deep-02)
            :part-of (d2 / darkness
                  :poss (e / earth)))
      :time (u / until
            :op1 (s2 / seize-01
                  :ARG0 (d3 / desire-01
                        :ARG1 (w / wake-01
                              :ARG1 s))
                  :ARG1 (s3 / someone
                        :ARG1-of (i / include-91
                              :ARG2 t)))))

(a / and
      :op1 (s / stretch-01
            :ARG0 (s2 / seed
                  :mod (l / little)
                  :mod (t2 / this))
            :ARG1 s2)
      :op2 (b / begin-01
            :ARG0 s2
            :ARG1 (p / push-01
                  :ARG0 s2
                  :ARG1 (s3 / sprig
                        :mod (l2 / little)
                        :ARG0-of (c / charm-01))
                  :ARG2 (u / upward
                        :direction (s4 / sun))
                  :manner (o / offensive :polarity -))
            :manner (t3 / timid
                  :time (a2 / at-first)))
      :time (t / then))

(a / allow-01
      :ARG0 (o / one)
      :ARG1 (g / grow-01
            :ARG1 i
            :location (w2 / wish-01
                  :ARG0 i
                  :ARG1-of (p / possible-01)))
      :condition (o2 / or
            :op1 (s / sprout
                  :part-of (r / radish))
            :op2 (s2 / sprig
                  :part-of (b2 / bush
                        :mod (r2 / rose)))
            :mod (o3 / only)
            :domain (i / it)))

(c / contrast-01
      :ARG2 (o / obligate-01
            :ARG2 (d / destroy-01
                  :ARG0 (o2 / one)
                  :ARG1 i2
                  :time (i / instant
                        :time-of (r / recognize-01
                              :ARG0 o2
                              :ARG1 i2)
                        :ord (o3 / ordinal-entity :value 1
                              :degree (v / very)))
                  :time (s / soon
                        :degree (m / most)
                        :compared-to (p2 / possible-01
                              :ARG1 d)))
            :condition (p / plant
                  :ARG1-of (b / bad-07)
                  :domain (i2 / it))))

(b2 / be-located-at-91
      :ARG1 (s / seed
            :ARG1-of (t / terrible-01)
            :quant (s2 / some)
            :poss (b / baobab))
      :ARG2 (p / planet
            :location-of (h / home
                  :poss (p2 / prince
                        :mod (l / little))))
      :time (n / now))

(i / infest-01
      :ARG1 (s / soil
            :poss (p / planet
                  :mod (t2 / that)))
      :ARG2 (t / they))

(p / possible-01 :polarity -
      :ARG1 (e / eliminate-01
            :ARG0 (y / you)
            :ARG1 (b / baobab)
            :time (e2 / ever))
      :condition (a / attend-02
            :ARG0 y
            :ARG1 b
            :time (l / late
                  :degree (t / too))))

(s / spread-01
  :ARG1 (i / it)
  :ARG2 (p / planet
          :mod (e / entire)))

(b / bore-01
      :ARG0 (i / it)
      :ARG2 (t2 / through
            :op1 (i2 / it)
            :mod (c / clear-03))
      :ARG3 (r / root
            :poss i))

(a / and
      :op1 (s / split-01
            :ARG0 b
            :ARG1 p2
            :ARG2 (p / piece)
            :condition (a2 / and
                  :op1 (s2 / small
                        :degree (t2 / too)
                        :domain (p2 / planet))
                  :op2 (b / baobab
                        :quant (m / many
                              :degree (t3 / too))))))

(s / say-01
      :ARG0 (p / prince
            :mod (l / little))
      :ARG1 (q / question
            :topic (d / discipline)
            :domain (i / it))
      :ARG2 (i2 / i)
      :time (l2 / late
            :degree (m / more)))

(a / attend-02
      :ARG0 (y2 / you)
      :ARG1 (t2 / toilet
            :poss (p / planet
                  :poss y)
            :ARG1-of (r / resemble-01
                  :ARG2 t))
      :manner (c / care-04
            :extent (g / great
                  :degree (m2 / most)))
      :time (f / finish-01
            :ARG0 (y / you)
            :ARG1 (t / toilet
                  :poss y)
            :time (d / date-entity :dayperiod (m / morning))))

(o2 / obligate-01
      :ARG1 (p / pull-01
            :ARG0 (y / you)
            :ARG1 (b / baobab
                  :mod (a / all))
            :ARG1-of (r / regular-02)
            :time (m / moment
                  :ord (o / ordinal-entity :value 1
                        :degree (v / very))
                  :time-of (p2 / possible-01
                        :ARG1 (d / distinguish-01
                              :ARG1 b
                              :ARG2 (r2 / rosebush
                                    :ARG2-of (r3 / resemble-01
                                          :ARG1 b
                                          :ARG1-of (c / close-10
                                                :degree (s / so))
                                          :time (e / early
                                                :op1 (y2 / youth
                                                      :poss b)
                                                :degree (m2 / most)))))))))

(a / add-01
      :ARG0 (p / prince
            :mod (l / little))
      :ARG1 (c / contrast-01
            :ARG1 (t / tedious
                  :degree (v / very)
                  :domain (w / work-01))
            :ARG2 (e / easy-05
                  :degree (v2 / very)
                  :ARG1 w)))

(a / and
      :op1 (s / say-01
            :ARG0 (h / he)
            :ARG1 (r / recommend-01
                  :ARG0 h
                  :ARG1 (d3 / draw-01
                        :ARG0 i
                        :ARG1 (p2 / picture
                              :ARG1-of (b / beautiful-02))
                        :purpose (p / possible-01
                              :ARG1 (s2 / see-01
                                    :ARG0 (c / child
                                          :location (l / live-01
                                                :ARG0 i))
                                    :ARG1 (t / this
                                          :mod (a2 / all))
                                    :manner (e / exact))))
                  :ARG2 i)
            :ARG2 (i / i)
            :time (d / day
                  :mod (o / one))))

(u / useful-05
      :ARG0 (t2 / they)
      :ARG1 (t / that)
      :degree (v / very)
      :condition (t3 / travel-01
            :ARG0 t2
            :time (d / day
                  :mod (s / some))))

(a / add-01
      :ARG0 (h / he)
      :ARG1 (h2 / harm-01 :polarity -
            :ARG0 (p / put-off-06
                  :ARG1 (t / thing
                        :ARG1-of (w / work-01)
                        :quant (p3 / piece))
                  :ARG2 (d / day
                        :mod (a2 / another)))
            :time (s / sometimes)))

(c2 / contrast-01
      :ARG2 (m3 / mean-01
            :ARG1 (t / that)
            :ARG2 (c / catastrophe)
            :time (a / always)
            :condition (b / baobab)))

(k / know-02
      :ARG0 (i / i)
      :ARG1 (p / planet
            :ARG1-of (i2 / inhabit-01
                  :ARG0 (m / man
                        :mod (l / lazy)))))

(n / neglect-01
  :ARG0 (h / he)
  :ARG1 (b / bush
          :mod (l / little)
          :quant 3))

(d / draw-01
      :ARG0 (i / i)
      :ARG1 (p / planet
            :mod (t / that))
      :manner (d2 / describe-01
            :ARG0 (p2 / prince
                  :mod (l / little))
            :ARG1 p
            :beneficiary i)
      :ARG1-of (c / cause-01))

(l / like-01 :polarity -
      :ARG0 (i / i)
      :ARG1 (t / take-01
            :ARG0 i
            :ARG1 (t2 / tone
                  :poss (m2 / moralist)))
      :degree (m / much))

(c2 / contrast-01
      :ARG2 (c3 / cause-01
            :ARG0 (a / and
                  :op1 (u / understand-01
                        :ARG1 (d / danger
                              :poss (b2 / baobab))
                        :degree (l / little
                              :degree (s / so)))
                  :op2 (r / risk-01
                        :ARG0 (a2 / anyone
                              :ARG1-of (l2 / lose-02
                                    :location (a3 / asteroid)
                                    :ARG1-of (p / possible-01)))
                        :degree (c / considerable
                              :mod (s2 / such))))
            :ARG1 (b3 / break-away-14
                  :ARG0 (i / i)
                  :ARG1 (r3 / reserve
                        :poss i)
                  :mod (f / for-once))))

(c2 / child)

(s / say-01
      :ARG0 (i / i)
      :ARG1 (w / watch-out-02 :mode imperative
            :ARG0 (y / you)
            :ARG1 (b / baobab))
      :manner (p / plain))

(c / cause-01
      :ARG0 (s / skirt-02
            :ARG0 (a / and
                  :op1 (p2 / person
                        :ARG0-of (h2 / have-rel-role-91
                              :ARG1 (i / i)
                              :ARG2 (f / friend)))
                  :op2 i)
            :ARG1 (d / danger
                  :mod (t / this))
            :ARG1-of (k / know-01 :polarity -
                  :ARG0 p2
                  :time (e / ever))
            :ARG1-of (l / long-03))
      :ARG1 (w / work-01
            :ARG0 i
            :ARG1 (p / picture
                  :ARG1-of (d2 / draw-01)
                  :mod (t3 / this))
            :ARG1-of (h / hard-02
                  :degree (s2 / so))
            :beneficiary p2))

(w / worth-02
      :ARG1 (l / lesson
            :ARG1-of (p / pass-on-09
                  :ARG0 (i / i)
                  :manner (t2 / this)))
      :ARG2 (t / trouble
            :ARG2-of (c / cost-01
                  :ARG1 l
                  :ARG3 i)
            :mod (a / all)))

(p / possible-01
      :ARG1 (a / ask-01
            :ARG0 (y / you)
            :ARG1 (p2 / picture :polarity -
                  :ARG1-of (d / draw-01)
                  :mod (o / other)
                  :location (b / book
                        :mod (t / this))
                  :mod (m / magnificent
                        :degree (e / equal)
                        :compared-to (p3 / picture
                              :ARG1-of (d2 / draw-01)
                              :mod (t2 / this)
                              :topic (b2 / baobab)))
                  :ARG0-of (i / impress-01
                        :degree (e2 / equal)
                        :compared-to p3)
                  :ARG0-of (c / cause-01
                        :ARG1 (a2 / amr-unknown)))
            :ARG2 (i2 / i)))

(s / simple-02
      :ARG1 (t / thing
            :ARG2-of (r / reply-01)))

(t / try-01
  :ARG0 (i / i))

(c / contrast-01
      :ARG2 (s / succeed-01 :polarity -
            :ARG0 (i / i)
            :ARG1 (o / other)))

(c / carry-01
      :ARG0 (f / force-01
            :ARG0 (n / necessity
                  :mod (u / urgent))
            :ARG0-of (i2 / inspire-01))
      :ARG1 (i / i)
      :destination (b / beyond
            :op1 i)
      :time (d / draw-01
            :ARG0 i
            :ARG1 (b2 / baobab)))

(c / chapter :mod 6)

(p / prince
      :mod (l / little))

(u / understand-01
      :ARG0 (i / i)
      :ARG1 (s / secret
            :poss (l / life
                  :poss (y / you)
                  :mod (l2 / little)
                  :ARG1-of (s2 / sad-02)))
      :manner (b / bit-by-bit))

(f / find-01
      :ARG0 (y / you)
      :ARG1 (e / entertain-01
            :ARG0 (l2 / look-01
                  :ARG0 y
                  :ARG1 (s / sunset)
                  :mod (p / pleasure
                        :ARG1-of (q / quiet-04)))
            :ARG1 y
            :mod (o / only))
      :ARG1-of (l / long-03))

(l / learn-01
      :ARG0 (i / i)
      :ARG1 (d / detail
            :ARG1-of (n / new-01)
            :mod (t / that))
      :time (d3 / date-entity
            :dayperiod (m / morning)
            :mod (d2 / day
                  :ord (o / ordinal-entity :value 4)))
      :time (s / say-01
            :ARG0 (y / you)
            :ARG1 (l2 / like-01
                  :ARG0 y
                  :ARG1 (s2 / sunset)
                  :degree (v / very))
            :ARG2 i))

(a / and
      :op1 (c / come-01 :mode imperative
            :ARG1 (y / you))
      :op2 (g / go-05 :mode imperative
            :ARG0 w
            :ARG1 (l / look-01
                  :ARG0 (w / we)
                  :ARG1 (s / sunset)
                  :time (n / now))))

(c / contrast-01
      :ARG2 (o / obligate-01
            :ARG2 (w2 / wait-01
                  :ARG1 (w / we))))

(s / say-01
  :ARG0 (i / i))

(w / wait-01 :mode interrogative)

(w / wait-01
      :ARG2 (a / amr-unknown))

(w / wait-01
      :ARG2 (s / sunset))

(o / obligate-01
      :ARG2 (w2 / wait-01
            :ARG1 (w / we)
            :duration (u / until
                  :op1 (t / time))))

(s / seem-01
      :ARG1 (s2 / surprise-01
            :ARG1 (y / you)
            :degree (m / much
                  :degree (v / very)))
      :time (a / at-first))

(a / and
      :op1 (l / laugh-01
            :ARG0 (y / you)
            :ARG2 y
            :time (t / then)))

(s / say-01
      :ARG0 (y / you)
      :ARG1 (t / think-01
            :ARG0 y
            :ARG1 (b / be-located-at-91
                  :ARG1 y
                  :ARG2 (h / home))
            :time (a / always))
      :ARG2 (i / i))

(s / so
  :mod (j / just))

(k / know-01
      :ARG0 (e / everybody)
      :ARG1 (s / set-11
            :ARG1 (s2 / sun)
            :location (c2 / country :wiki "France"
                  :name (n3 / name :op1 "France"))
            :time (d / date-entity :time "12:00"
                  :location (c / country :wiki "United_States"
                        :name (n2 / name :op1 "United" :op2 "States")))))

(p / possible-01
      :ARG1 (g / go-02
            :ARG0 y
            :ARG3 (d / date-entity :time "12:00")
            :ARG4 (s / sunset)
            :ARG1-of (s2 / straight-04))
      :condition (p2 / possible-01
            :ARG1 (f / fly-01
                  :ARG1 (y / you)
                  :duration (t / temporal-quantity :quant 1
                        :unit (m / minute))
                  :destination (c / country :wiki "France" :name (n / name :op1 "France")))))

(f / fortunate-01 :polarity -
      :ARG2 (b / be-located-at-91
            :ARG1 (c / country :wiki "France"
                  :name (n / name :op1 "France"))
            :ARG2 (a / away
                  :extent (f2 / far
                        :degree (t / too)))
            :purpose (t2 / that)))

(s2 / say-01
      :ARG1 (c2 / contrast-01
            :ARG2 (o / obligate-01
                  :ARG2 (m / move-01
                        :ARG0 p2
                        :ARG1 (c / chair
                              :poss p2)
                        :extent (s / step
                              :quant (f / few))
                        :mod (o2 / only))
                  :location (p / planet
                        :mod (t / tiny)
                        :poss (p2 / prince
                              :mod (l / little)
                              :poss (i / i)))))
      :ARG2 p2)

(p / possible-01
      :ARG1 (s / see-01
            :ARG0 (y / you)
            :ARG1 (a / and
                  :op1 (e / end-01
                        :ARG1 (d / day))
                  :op2 (f / fall-04
                        :ARG1 (t / twilight)))
            :time (l / like-02
                  :ARG0 y
                  :ARG1 s
                  :mod (a2 / any))))

(s / say-01
      :ARG0 (y / you)
      :ARG1 (s2 / see-01 :frequency 44
            :ARG0 y
            :ARG1 (s3 / sunset)
            :time (d / day
                  :mod (o / one)))
      :ARG2 (i / i))

(a / and
      :op1 (a2 / add-01
            :ARG0 (y / you)
            :ARG1 (l3 / love-01
                  :ARG0 (o / one)
                  :ARG1 (s / sunset)
                  :time (s2 / sad-02
                        :ARG1 o
                        :mod (s3 / so)))
            :time (l / late
                  :degree (m / more
                        :quant (l2 / little)))))

(s / sad-02 :mode interrogative
      :ARG1 (y / you)
      :time (t / then)
      :degree (s2 / so))

(a / ask-01
      :ARG0 (i / i)
      :ARG1 (b / be-temporally-at-91 :mode interrogative
            :ARG2 (d / day
                  :ARG0-of (h / have-03
                        :ARG1 (s / sunset :quant 44)))))

(c / contrast-01
      :ARG2 (r / reply-01 :polarity -
            :ARG0 (p / prince
                  :mod (l / little))))

